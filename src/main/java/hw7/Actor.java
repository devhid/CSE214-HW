package hw7;

import java.util.*;

/**
 * The {@code Actor) class represents an actor for a movie with a name, movies they starred in and actors they starred with.
 *
 *
 * @author Mankirat Gulati
 *    email: mankirat.gulati@stonybrook.edu
 *    Stony Brook ID: 111161128
 */
public class Actor {
    // The name of the actor.
    private String name;

    // Movies the actor has starred in.
    private Set<Movie> movies;
    // Actors this actor has starred with.
    private Set<Actor> friends;

    // Whether this actor has been visited in the breadth first search.
    private boolean visited;
    // Stores the path from a breadth first search.
    private LinkedList<String> path;

    /**
     * Initializes {@code name} to the parameter in the constructor.
     * Also initializes {@code movies} and {@code friends} to a {@code LinkedHashSet<String>},
     * {@code path} to a {@code LinkedList<String>} and {@code visited} to false.
     *
     * @param name The name of the actor.
     */
    public Actor(final String name) {
        this.name = name;

        this.movies = new LinkedHashSet<>();
        this.friends = new LinkedHashSet<>();

        this.visited = false;
        this.path = new LinkedList<>();
    }

    /**
     * Returns the name of this actor.
     *
     * @return The name of this {@code Actor} object.
     */
    public String getName() {
        return this.name;
    }

    /**
     * Returns a set of movies.
     *
     * @return A set of {@code Movie} objects this {@code Actor} has starred in.
     */
    public Set<Movie> getMovies() {
        return this.movies;
    }

    /**
     * Returns a set of actors.
     *
     * @return A set of {@code Actor} objects this {@code Actor} has co-starred with.
     */
    public Set<Actor> getFriends() {
        return this.friends;
    }

    /**
     * Checks if this actor has been visited.
     *
     * @return {@code true} if this {@code Actor} has been visited in the breadth first search, {@code false} if not.
     */
    public boolean isVisited() {
        return this.visited;
    }

    /**
     * Returns the path generated by the breadth first search.
     *
     * @return A {@code LinkedList<String>} representing the path generated by the breadth first search.
     */
    public LinkedList<String> getPath() {
        return this.path;
    }

    /**
     * Adds a movie to the set.
     *
     * @param movie The {@code Movie} object being added.
     */
    public void addMovie(final Movie movie) {
        movies.add(movie);
    }

    /**
     * Adds an actor to the set.
     *
     * @param friend The {@code Actor} object being added.
     */
    public void addFriend(final Actor friend) {
        friends.add(friend);
    }

    /**
     * Sets this actor's current friends with the set of friends in the parameter.
     *
     * @param friends The set of {@code Actor} objects being set.
     */
    public void setFriends(Set<Actor> friends) {
        this.friends = friends;
    }

    /**
     * Sets the path for this actor.
     *
     * @param path The {@code LinkedList<String>} representing the breadth first search path being set.
     */
    public void setPath(LinkedList<String> path) {
        this.path = path;
    }

    /**
     * Sets the name of the actor with the specified one.
     *
     * @param name The new name for the actor being set.
     */
    public void setName(final String name) {
        this.name = name;
    }

    /**
     * Sets the visited property for this actor.
     *
     * @param visited The boolean property representing whether this actor has been visited in the breadth first search.
     */
    public void setVisited(boolean visited) {
        this.visited = visited;
    }

    /**
     * Returns a string representation of this actor.
     *
     * @return A {@code String} which contains this {@code Actor}'s name.
     */
    @Override
    public String toString() {
        return this.name;
    }

}
